<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title type="text">Soft Engineer</title>
    <subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle>
    <updated>2023-09-07T22:49:57&#43;08:00</updated>
    <id>https://rainrainwu.github.io/</id>
    <link rel="alternate" type="text/html" href="https://rainrainwu.github.io/" />
    <link rel="self" type="application/atom&#43;xml" href="https://rainrainwu.github.io/atom.xml" />
    <author>
            <name>Rain Wu</name>
            <uri>https://rainrainwu.github.io/</uri>
            
                <email>s0958334772@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    <generator uri="https://gohugo.io/" version="0.117.0">Hugo</generator>
        <entry>
            <title type="text">職業倦怠應對策略</title>
            <link rel="alternate" type="text/html" href="https://rainrainwu.github.io/posts/dealing_with_job_burnout/" />
            <id>https://rainrainwu.github.io/posts/dealing_with_job_burnout/</id>
            <updated>2023-09-07T22:49:50&#43;08:00</updated>
            <published>2023-09-05T13:17:02&#43;08:00</published>
            <author>
                    <name>Rain Wu</name>
                    <uri>https://github.com/RainrainWu/</uri>
                    <email>s0958334772@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">如果你不是那萬中選一熱愛工作的優質員工的話，我相信我們或多或少，都曾經或著即將會與職業倦怠有些交集。即使在不同國家、不同職業、不同年資之間有樣本數或形式上的落差，也沒有必要因此被刻板印象定義自己的狀態。
統計數字終究只是有助於旁觀者理解而已，遠不如多花點心思了解自己來得實際，即使我是唯一一個做軟體工程師做到職厭倦怠的人，我仍會想找個機會談談這段經驗。
當時並沒有預先感覺到什麼明顯的徵兆讓我能先行處理這問題，基本上是已經陷入職業倦怠的狀態，才後知後覺的意識到需要應對一下。值得慶幸的是過於理性的思考方式依舊穩定運作著，有條有理的把自己搞定後，還能將當時虛無飄渺的情緒與感受轉化成這些具體文字。
我曾經以為自己對軟體工程的熱忱根本不會有職業倦怠的問題，但我很快地發現那跟工作完全是兩碼子事。更準確一點的來說，是我深刻體會到「是不是優秀的軟體工程師」和「會不會職業倦怠」兩者間沒什麼關聯。
這就先來談談職業倦怠的原因好了，網路上能查到很多，但我只會談談我自己的：
優秀的軟體工程師不會職業倦怠 在高手雲集的同溫層裡距離優秀可說是遙遙無期，但至少我有個明確的方向持續努力著，而不要被職業倦怠扯後腿就是其中之一，現在回頭看這真是個坑自己的爛主意。
即使再怎麼糟糕的情境，我仍會盡可能使用合理的設計，交付品質至少能讓自己接受的程式碼，持續輸出知識提高整體技術水平。這些一個不漏的做起來說真的勞心費神，沒有時間能浪費在職業倦怠上。
這就是當時當時的賭局，究竟是我先成為理想中「優秀的軟體工程師」然後將一切應付得得心應手，還是先沉入職業倦怠的泥沼中，被迫認清事實著手處理這個狀況。
結果明顯是後者。前者以我對自己的要求在當時的環境待個十年也無法達到，即使成了也不可能如我所願得心應手，因為有許多關鍵的外部因素不會因此而消失。
原本以為職業倦怠只是自己的個人問題，但顯然不是。
企業文化與價值觀的不相容 職業倦怠成因中那些與工作環境或內容有關的，雖然有些歸因於產業性質，但八成都和企業文化有所關聯。從程式碼變數命名規則這種灰塵般的小議題，大到加班時數有沒有違反勞基法這種紅線，處處都清晰的反映著。
無所不在的企業文化我一直都有所察覺，但也僅止於察覺，然後講些自嘲的工程師笑話和茶餘飯後的八卦消遣而已，頂多我抱怨的頻率比平均值高了點。
除此之外我並沒有，確切來說是沒有想到可以，特別有目的性的去掙扎什麼。就如同在荒野中遇到暴雨，我知道被淋濕很糟，但也沒得躲，跑起來也不會淋比較少，多遇到幾次久了就習以為常了。
大概是這個時期，企業文化不相容對我而言更像一種天災，我沒能力抗衡它。這種束手無策的無力感隨著天災的發生次數快速累積，日復一日，難以消散。
一直到我已經用其他方式解決問題後，我才驚覺這方向可能有令人耳目一新的答案，開始動腦追溯根源。而我得出的結論是：有些東西無法改變是因為有其他人覺得這麼做相當合理，要改變文化需要先改變關鍵的人。
以工作量規劃為例，有些團隊將留有餘裕視為常態，若沒有應付緊急需求則由成員自行提案。有些公司將工作量塞滿作為常態，僅有在連假時才會進行減量，若遭遇緊急需求仍需要調度人力解決。
當然，職業倦怠並不是什麼絕症，至少在我身上不是。然而這需要的絕對不是精神雞湯，而是在釐清原因後用對應的方法根治。
軟體工程師是份工作 在我把自己的個人定位和軟題工程師的職位完全剝離後，精神負擔可說是如釋重負。它不過就是份工作而已，沒有必要把自己對於軟體工程的堅持或憧憬全然投射在上面。
我們可以是個十分擅長效能最佳化的工程師，但沒有必要在工作中無時無刻做到這一點，你甚至不需要讓同事知道，避免承受額外的期待。
也許是服兵役時體悟到的心得，既然躲不掉不如抽離所有情緒與價值觀，就當那段時間昏迷了一樣。一週約莫就四十小時，放下執著隨和地應付，剩下的時間和精神都是自己的。
當然這也不是在慫恿人扔了技術背景的堅持，而是強調工作本質是利益交換，審時度勢理性投入。把自己的整套價值觀給搭進去，很容易把無力感反向傳遞回自己身上，形成「職場不順 == 職涯不順 == 人生不順」的僵局，迅速導致職業倦怠。
軟體工程並非一定得和工作綁死，規律性的閱讀和寫作對我來說就是一大樂趣，下班後的職涯對許多人來說相當陌生，但也因此才有更多的可能性值得探索。
改變自己的工作內容 最初我完全沒有朝著這個方向思考過，一直以為工作內容就固定是 job description 上寫的那些，我頂多只能多拿幾個 offer，在它們之中選個喜歡的而已。
一天超過 6 小時在寫 code 對我來說是種折磨，光想像這種日子未來還要持續個一兩年就足以觸發我的職業倦怠，但其實目前痛苦並不代表未來都將如此。
隨著對工作事務的上手，我很快便有了些時間上的餘裕能夠深入研究些感興趣的技術、跑一些實驗、甚至多管閒事的去推動些沒被要求但我覺得值得一試的改善計畫。
對工作的興趣似乎因此而有些復燃的跡象，加上有前輩明確地和我討論調整工作內容的可能性，也有同儕分享類似的經驗，我才有意識地將這作為向上管理的其中一個目標。</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/categories/career/" term="career" label="career" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/career/" term="career" label="career" />
                            
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/life/" term="life" label="life" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Escalating the Technical Debt</title>
            <link rel="alternate" type="text/html" href="https://rainrainwu.github.io/posts/escalate-the-tech-debt/" />
            <id>https://rainrainwu.github.io/posts/escalate-the-tech-debt/</id>
            <updated>2023-08-06T17:18:31&#43;08:00</updated>
            <published>2023-05-07T16:19:25&#43;08:00</published>
            <author>
                    <name>Rain Wu</name>
                    <uri>https://github.com/RainrainWu/</uri>
                    <email>s0958334772@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">Tech debt can be considered one of the most significant cognitive gaps between eng roles and others within software companies, and it often becomes a major obstacle in project communication and execution.
One major reason for the difficulty in reaching consensus among different roles is its abstract nature.</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/categories/engineering/" term="engineering" label="engineering" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/engineering/" term="engineering" label="engineering" />
                            
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/management/" term="management" label="management" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Collaborative Negotiation</title>
            <link rel="alternate" type="text/html" href="https://rainrainwu.github.io/posts/collaborative_negotiation/" />
            <id>https://rainrainwu.github.io/posts/collaborative_negotiation/</id>
            <updated>2023-05-01T16:22:53&#43;08:00</updated>
            <published>2023-04-30T17:40:21&#43;08:00</published>
            <author>
                    <name>Rain Wu</name>
                    <uri>https://github.com/RainrainWu/</uri>
                    <email>s0958334772@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">&lt;p&gt;Conflict is an almost inevitable problem in one&amp;rsquo;s career. It often ended up feeling embarrassed or chose to keep the grievances to ourselves when dealing with it the first few time. However, looking back now, those seemingly catastrophic dilemmas did not necessarily end in tragedy.&lt;/p&gt;
&lt;p&gt;After practicing &amp;lsquo;Collaborative Negotiation&amp;rsquo; in various scenarios such as interviews, project scheduling, and problem clarification over the past few years, I have fugured out an approach for myself that is both emotionally acceptable and delivers mostly favorable outcomes.&lt;/p&gt;
&lt;p&gt;Here are some relatively specific and practical skills to share:&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/categories/negotiation/" term="negotiation" label="negotiation" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/career/" term="career" label="career" />
                            
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/negotiation/" term="negotiation" label="negotiation" />
                            
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/team/" term="team" label="team" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">A Necessary Evil : On Call Rotation (I)</title>
            <link rel="alternate" type="text/html" href="https://rainrainwu.github.io/posts/on-call-rotation-01/" />
            <id>https://rainrainwu.github.io/posts/on-call-rotation-01/</id>
            <updated>2023-05-01T15:09:29&#43;08:00</updated>
            <published>2023-03-19T15:29:23&#43;08:00</published>
            <author>
                    <name>Rain Wu</name>
                    <uri>https://github.com/RainrainWu/</uri>
                    <email>s0958334772@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">&lt;p&gt;Today, in many business models, product or service stability is an essential element and often the key factor in determining customer retention and company revenue.&lt;/p&gt;
&lt;p&gt;On-call rotation is a widely used and proven practice, but it is also a major contributor to the erosion of work-life balance. While it may seem like a necessary decision, there are many details that should be considered, as cultural differences can often leave a lasting impact.&lt;/p&gt;
&lt;p&gt;This series of articles will cover several interesting topics. These topics are not only indicators used by myself to evaluate the engineering culture of other teams during interviews, but also ways to drive progress within each team when I have greater impact in future careers.&lt;/p&gt;</summary>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/categories/engineering/" term="engineering" label="engineering" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/engineering/" term="engineering" label="engineering" />
                            
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/product/" term="product" label="product" />
                            
                        
                            
                            
                            
                                <category scheme="https://rainrainwu.github.io/tags/team/" term="team" label="team" />
                            
                        
                    
                
            
        </entry>
    
</feed>
