[{"categories":["team","engineering"],"content":"在如今專業化分工逐漸成熟的軟體業中，編制與招募依照職能劃分已是司空見慣，而某些團隊中可能為了消化較多樣的業務，也有培養成員成為不同領域專家 (Domain Expert) 的文化。能夠盡可能提高研發角色的工作內容的同質性，提高效率的同時有助於專業累積固然是好事，但同時也會讓知識落差的問題更加明顯。\n合作中實際上會阻礙進度的有八成以上並不是些演算法、Linux 指令、package 用法等等，上網查能查到或是看同事的 source code 就能懂的東西，而是像 payload 欄位意義、magic number、有等於沒有的 error message 之類的，原作者不解釋我還真通靈不出來的情況。\n這也讓我對於知識落差造成的困擾有很深的體悟，間接影響我後續成為團隊中相對願意主動改善 README，也堅持讓所有介面設計符合 best practice 的角色。\n隨著待過的團隊變多，我個人大致把企業文化在這些問題上的表現分布在光譜上，一端是把責任放在「知識的需求者」身上，另一端則是期望「知識的持有者」負擔更多的責任。長話短說，我個人更為偏好後者的風格。\n在一個由「知識的需求者」承擔更多責任的文化中可能會遇到這些情況：\nREADME 完全空白，因此不熟的人有疑問可能需要花費數十分鐘至數小時研究 source code 由於不清楚 request body 必要欄位有哪些，只好在測試環境不斷 try and error 數次至數十次，有時候甚至會不小心把系統弄壞 只收到了 400 的 http status 但沒有 error message，只好找維護者幫忙查 log，在對方回覆原因之前完全無法推動進度 在一個由「知識的持有者」承擔更多責任的文化中可能會遇到這些情況：\n需要對 slack 訊息積極回覆，不容易維持高品質的 focus time 研發團隊需要有額外心思持續更新文件並讓它易於理解，README 和 wiki page 有寫不一定代表有用 為了最大程度地遵循 best practice 而需要更多辯論與重構的時間，無法適應快節奏的時程，在招募上也需要留意人選價值觀是否合適 以一個個人貢獻者的角度來看，傾向前者的文化無非會直接在新人入職前幾週就給予極大的折磨，長期而言對峙是外部化會構成明顯阻礙，導致評估是否重複利用其他 team 現成系統功能有所顧慮，每當有資深成員要離職交接時也會有段陣痛期。\n偏向後者的文化雖然可預期的需要付出些生產力上的成本，但是和價值觀相符的緣故因此讓我的接受度較高。然而回到現實面來說，仍是這些知識落差造成的問題難以量化，也鮮少有軟體企業落實將其他下游 peer teams 合作效率和感受納入績效評核的緣故。\n","description":"","tags":[],"title":"軟體工程團隊的知識落差","uri":"/posts/bridging_the_knowledge_gap/"},{"categories":["career"],"content":"如果你不是那萬中選一熱愛工作的優質員工的話，我相信我們或多或少，都曾經或著即將會與職業倦怠有些交集。即使在不同國家、不同職業、不同年資之間有樣本數或形式上的落差，也沒有必要因此被刻板印象定義自己的狀態。\n統計數字終究只是有助於旁觀者理解而已，遠不如多花點心思了解自己來得實際，即使我是唯一一個做軟體工程師做到職厭倦怠的人，我仍會想找個機會談談這段經驗。\n當時並沒有預先感覺到什麼明顯的徵兆讓我能先行處理這問題，基本上是已經陷入職業倦怠的狀態，才後知後覺的意識到需要應對一下。值得慶幸的是過於理性的思考方式依舊穩定運作著，有條有理的把自己搞定後，還能將當時虛無飄渺的情緒與感受轉化成這些具體文字。\n我曾經以為自己對軟體工程的熱忱根本不會有職業倦怠的問題，但我很快地發現那跟工作完全是兩碼子事。更準確一點的來說，是我深刻體會到「是不是優秀的軟體工程師」和「會不會職業倦怠」兩者間沒什麼關聯。\n這就先來談談職業倦怠的原因好了，網路上能查到很多，但我只會談談我自己的：\n優秀的軟體工程師不會職業倦怠 在高手雲集的同溫層裡距離優秀可說是遙遙無期，但至少我有個明確的方向持續努力著，而不要被職業倦怠扯後腿就是其中之一，現在回頭看這真是個坑自己的爛主意。\n即使再怎麼糟糕的情境，我仍會盡可能使用合理的設計，交付品質至少能讓自己接受的程式碼，持續輸出知識提高整體技術水平。這些一個不漏的做起來說真的勞心費神，沒有時間能浪費在職業倦怠上。\n這就是當時當時的賭局，究竟是我先成為理想中「優秀的軟體工程師」然後將一切應付得得心應手，還是先沉入職業倦怠的泥沼中，被迫認清事實著手處理這個狀況。\n結果明顯是後者。前者以我對自己的要求在當時的環境待個十年也無法達到，即使成了也不可能如我所願得心應手，因為有許多關鍵的外部因素不會因此而消失。\n原本以為職業倦怠只是自己的個人問題，但顯然不是。\n企業文化與價值觀的不相容 職業倦怠成因中那些與工作環境或內容有關的，雖然有些歸因於產業性質，但八成都和企業文化有所關聯。從程式碼變數命名規則這種灰塵般的小議題，大到加班時數有沒有違反勞基法這種紅線，處處都清晰的反映著。\n無所不在的企業文化我一直都有所察覺，但也僅止於察覺，然後講些自嘲的工程師笑話和茶餘飯後的八卦消遣而已，頂多我抱怨的頻率比平均值高了點。\n除此之外我並沒有，確切來說是沒有想到可以，特別有目的性的去掙扎什麼。就如同在荒野中遇到暴雨，我知道被淋濕很糟，但也沒得躲，跑起來也不會淋比較少，多遇到幾次久了就習以為常了。\n大概是這個時期，企業文化不相容對我而言更像一種天災，我沒能力抗衡它。這種束手無策的無力感隨著天災的發生次數快速累積，日復一日，難以消散。\n一直到我已經用其他方式解決問題後，我才驚覺這方向可能有令人耳目一新的答案，開始動腦追溯根源。而我得出的結論是：有些東西無法改變是因為有其他人覺得這麼做相當合理，要改變文化需要先改變關鍵的人。\n以工作量規劃為例，有些團隊將留有餘裕視為常態，若沒有應付緊急需求則由成員自行提案。有些公司將工作量塞滿作為常態，僅有在連假時才會進行減量，若遭遇緊急需求仍需要調度人力解決。\n當然，職業倦怠並不是什麼絕症，至少在我身上不是。然而這需要的絕對不是精神雞湯，而是在釐清原因後用對應的方法根治。\n軟體工程師是份工作 在我把自己的個人定位和軟題工程師的職位完全剝離後，精神負擔可說是如釋重負。它不過就是份工作而已，沒有必要把自己對於軟體工程的堅持或憧憬全然投射在上面。\n我們可以是個十分擅長效能最佳化的工程師，但沒有必要在工作中無時無刻做到這一點，你甚至不需要讓同事知道，避免承受額外的期待。\n也許是服兵役時體悟到的心得，既然躲不掉不如抽離所有情緒與價值觀，就當那段時間昏迷了一樣。一週約莫就四十小時，放下執著隨和地應付，剩下的時間和精神都是自己的。\n當然這也不是在慫恿人扔了技術背景的堅持，而是強調工作本質是利益交換，審時度勢理性投入。把自己的整套價值觀給搭進去，很容易把無力感反向傳遞回自己身上，形成「職場不順 == 職涯不順 == 人生不順」的僵局，迅速導致職業倦怠。\n軟體工程並非一定得和工作綁死，規律性的閱讀和寫作對我來說就是一大樂趣，下班後的職涯對許多人來說相當陌生，但也因此才有更多的可能性值得探索。\n改變自己的工作內容 最初我完全沒有朝著這個方向思考過，一直以為工作內容就固定是 job description 上寫的那些，我頂多只能多拿幾個 offer，在它們之中選個喜歡的而已。\n一天超過 6 小時在寫 code 對我來說是種折磨，光想像這種日子未來還要持續個一兩年就足以觸發我的職業倦怠，但其實目前痛苦並不代表未來都將如此。\n隨著對工作事務的上手，我很快便有了些時間上的餘裕能夠深入研究些感興趣的技術、跑一些實驗、甚至多管閒事的去推動些沒被要求但我覺得值得一試的改善計畫。\n對工作的興趣似乎因此而有些復燃的跡象，加上有前輩明確地和我討論調整工作內容的可能性，也有同儕分享類似的經驗，我才有意識地將這作為向上管理的其中一個目標。\n即使經歷了工作轉換，這個方法仍然給了我自己不少幫助。寫程式的時間降低至平均每日 2 至 4 小時左右，對我來說是個舒適的範圍，但可能也和我對程式語言的熟悉度提升有關。\n取而代之的是多瀏覽一些技術方面的設計提案，並協調工具整合來改善流程中的痛點，這對我更有吸引力的多，當然也少不了自行研究的部分，而最終知識也將被應用在公司產品上。\n預防遠勝於治療 當然，如果能在入職之前事先知道自己會不會快速感到倦怠，那應該是在好不過了。\n為此我盡可能明確的整理出感到無力的因素，並且有技巧地確認對方團隊中是否存在類似的問題。下面列出了幾項，也許能讓你有些共鳴：\n不願意投入資源進行自動化，維持勞力密集作業 將超額的工作量作為常態，完全不當它是問題 職等或薪酬受到硬性限制，比如學歷、年資或性別 然而這些資訊往往會影響到企業品牌形象，對方不一定會據實以告或是被要求以官方說法回應，執著追問可能也有損印象分數，我個人習慣是用一些旁敲側擊的方式確認。\n比如半開玩笑的提一下過去工作經驗中的慘況消遣自己，觀察對方有沒有露出「真的假的這裡也差不多欸！」的表情，或是管不住嘴直接真情流露的把一切都招了。\n具體上也可以藉由請教「部署新版本的流程」來試探自動化程度，以及用「想認識喜歡旅遊的同事」開話題，試探連假是否會被凹加班，以及請長假是否會被刁難。\n要記住獲得資訊才是首要目的，各式話題與閒聊氛圍都只是手段，要圍繞著目的去設計與開展。\n寫到這裡，大致上談了上一次職業倦怠的種種感受與經驗，以整個職涯來看其實是在相對初期的時候，比大多數案例提早了不少。\n主因應是對於工作環境有不合理的期待，又沒有足夠的能力與經驗立即做出改變。所幸情況不嚴重，在尚未深陷其中時就採取行動脫身，如今能一邊回憶整理思緒一邊淬煉文字將其更好地表達出來，十分值得作為成功克服的紀念。\n","description":"","tags":[],"title":"職業倦怠應對策略","uri":"/posts/dealing_with_job_burnout/"},{"categories":["engineering"],"content":"Tech debt can be considered one of the most significant cognitive gaps between eng roles and others within software companies, and it often becomes a major obstacle in project communication and execution.\nOne major reason for the difficulty in reaching consensus among different roles is its abstract nature. Therefore, we need clear metrics to attach more concrete meanings to statements like “taking too long,” “difficult to implement,” “unstable,” and so on.\nFor example, “In the product introduction, stating that data analysis functionality can be completed within 2 hours, but 30% of customers receive reports after more than 4 hours. Additionally, this quarter has seen 10 complaints from key customers, each requiring a senior engineer to spend two days to resolve.”\nThis kind of communication approach can effectively and concretely reflect the severity of the problems.\nUnfortunately, this scenario is overly ideal, and obtaining such clear metrics undoubtedly requires both foresight and a solid infrastructure.\nFor most teams, their daily work is more akin to dealing with a proliferation of bugs everywhere, leaving little mental capacity to consider what metrics they need and how to calculate them.\nAs a first step, which is both low-cost and easy to try, is to spend a few extra hours studying the third-party tools or services at hand to see if they have any useful features.\nFor example, adding a specific tag to Jira tickets caused by a technical debt-related complaint. By doing this, you can easily query and determine how many issues were caused, then calculate the time spent on opening and closing tickets to estimate the amount of engineering effort it consumed.\nThis is obviously not a simple matter that can be solved with just a few words. If it were that easy, there wouldn’t be so many software engineers feeling frustrated by technical debt.\nHowever, besides hoping to land in a team that values software quality, using a mindset of technical management to escalate the problem is also an approach worth trying.\n","description":"","tags":[],"title":"Escalating the Technical Debt","uri":"/posts/escalate-the-tech-debt/"},{"categories":["negotiation"],"content":"Conflict is an almost inevitable problem in one’s career. It often ended up feeling embarrassed or chose to keep the grievances to ourselves when dealing with it the first few time. However, looking back now, those seemingly catastrophic dilemmas did not necessarily end in tragedy.\nAfter practicing ‘Collaborative Negotiation’ in various scenarios such as interviews, project scheduling, and problem clarification over the past few years, I have fugured out an approach for myself that is both emotionally acceptable and delivers mostly favorable outcomes.\nHere are some relatively specific and practical skills to share:\nRather than directly opposing issues, focus on and gradually expand areas of common ground While it is natural to invest energy in issues that one cares about, it can be challenging to make progress when directly opposing the other side. In situations where obstacles seem insurmountable, considering alternative routes can also be an option.\nFor instance, when discussing a project with a tight schedule, proposing a delay in the delivery time can encounter great resistance. However, there might be a shared understanding that the situation must be mitigated on time.\nBased on this unspoken agreement, the focus can be shifted to other aspects such as delivery quality or scale instead of just the schedule.\nRaise the level of discussion by continuously tracing back to the root of the problem Negotiations that are difficult to progress may be due to strict constraints within the framework. For example, the conversation can become stuck in a tug of war over the specific number after being asked about the current or expected basic salary.\nWhile the basic salary is undoubtedly significant, it is only one aspect of the compensation package, and the current package structure is just one piece of information disclosed during the recruitment process. Therefore, it might be beneficial to elevate the discussion by delving into the whole compensation package structure or even the entire recruitment policy.\nThe core issue should be focused on making the recruitment process successful, rather than merely convincing the candidate to accept a specific number mentioned in a half-hour video call.\nWhat other action can be took to make the recruitment successful, considering the current policies and procedures? This might involve offering sign-on bonuses, additional PTO, submitting recommendation letters from former managers, or professional certificates for re-evaluation.\nBy elevating the discussion and reframing the problem, there may be opportunities to discover new possibilities for collaboration.\nClarify the goals and limitations of both sides and collaborate to find a solution Breaking the deadlock can also be achieved by sincerely asking the other side about their current considerations or limitations. This can help establish a shared perspective and clarify the goals of both sides. By engaging in candid communication, you can work together towards finding a mutually beneficial solution.\nMost of the time, nothing will be changed whether we choose to be transparent or withhold information. However, a desirable outcome can be achieved by exchanging ideas and arriving at a feasible solution.\nThe inclination to withhold information is primarily a matter of perception, but with enough work experience, many things become common knowledge, and we may even laugh it off if we choose to be transparent.\nUntangling the underlying logic of restrictions during negotiations and searching for details that provide a turning point or a reason for making an exception can be worthwhile and may lead to finding a solution that was not initially apparent.\nInvite the other side to participate in “Collaborative Negotiation” I personally think that one of the core concepts of “cooperative negotiation” is to share information. If both parties are willing to invest, it can save a lot of mental costs of being suspicious, and there is a considerable improvement in the efficiency of progress.\nThe last technique I want to share is to demonstrate the efficiency and results to the other side, encourage them to share more information, and work together towards achieving common goals.\nBy doing so, you can foster a sense of cooperation and establish a shared perspective, leading to a more successful negotiation outcome.\n","description":"","tags":[],"title":"Collaborative Negotiation","uri":"/posts/collaborative_negotiation/"},{"categories":["engineering"],"content":"Today, in many business models, product or service stability is an essential element and often the key factor in determining customer retention and company revenue.\nOn-call rotation is a widely used and proven practice, but it is also a major contributor to the erosion of work-life balance. While it may seem like a necessary decision, there are many details that should be considered, as cultural differences can often leave a lasting impact.\nThis series of articles will cover several interesting topics. These topics are not only indicators used by myself to evaluate the engineering culture of other teams during interviews, but also ways to drive progress within each team when I have greater impact in future careers.\nHow companies Treat On Call Rotation The management’s stance on an issue can be considered the starting point for everything. It determines the allocation of resources and the level of humanization in the system and processes.\nWhile software products cannot be perfect and accidents may occur after going online, this does not mean that having engineers on-call is a one-time solution. Turning a blind eye to problems after implementing an on-call system is the worst strategy.\nHowever, these are abstract concepts that can be challenging to make progress on when raised within an organization. Additionally, the other party may whitewash such sensitive issues during an interview. To provide more concrete examples, I have outlined a few specific issues below for reference.\nSupporting measures such as shift scheduling mechanism, SOP, accident classification, etc. These various supporting measures exist to make on-call rotations more efficient and humane. I have personally experienced a significant difference early in their career based on the presence of such measures, and has since placed great importance on this aspect of the culture.\nFor example, when national holidays is coming and no one is willing to be on-call, there are specific issues to consider such as whether there is a maintenance SOP document to follow or if an accident requires immediate attention. These factors have a significant impact on daily work.\nThese measures reveal whether a company is willing to invest resources to alleviate the pressure on frontline personnel and minimize the frequency of disrupting employees during non-working hours.\nTrying to prevent the same problem from happening again and again. No one wants to be called back to work during non-working hours. However, if an incident occurs that affects someone’s life, efforts should be made to prevent it from happening again in the future.\nWhile not all problems can be fundamentally solved, many can be mitigated through techniques such as automatic retry when encountering errors in network requests or implementing new technologies that allow for failover.\nIf a large number of problems continue to occur without mitigation, it may indicate that On Call is being used as a long-term solution rather than a short-term emergency measure. This can lead to increased pressure on the team.\nWillingness to compensate those affected Compensation means recognizing the impact on an employee’s life caused by On Call responsibilities and being willing to communicate constructively. Having corresponding compensation rules is a positive signal, especially when compared to organizations that believe engineers should solely be responsible for the normal operation of the system.\nThe most common compensation methods are compensatory time off and overtime pay, each with its own advantages and disadvantages depending on the team and individual circumstances.\nFor instance, requesting compensatory leave in a short period of time when the workload is heavy can be difficult, and overtime pay is not advantageous for employees with low basic salaries. The relatively low overtime pay can lead to situations where the normal limit exceeds the legal limit.\nClarifying ambiguities or exceptions to the rules can help to obtain more practical information, reduce information gaps, and align mutual expectations within the organization.\nThis time, we have discussed how the organizational culture reflected in On Call Rotation through some specific questions. This can serve as a reference for evaluating the culture of a new team or promoting improvements in the current organization.\nWhile many companies may not be able to provide a more humane On Call system due to limited resources or the nature of their product, readers are encouraged to think about how to have a constructive discussion after raising concerns. After all, there should always be someone who fights for the opportunity to bring about change.\nThe following articles will take a pragmatic approach to the daily life of software engineering teams. They will analyze the root causes of problems and discuss the harm they can cause to an organization.\n","description":"","tags":[],"title":"A Necessary Evil : On Call Rotation (I)","uri":"/posts/on-call-rotation-01/"},{"categories":null,"content":"隨筆記錄一下這段時間倫敦租屋找房的各種經歷，體感上相較於台北困難的多，尤其是面對更大的競爭壓力下，不可能在看完所有有興趣的房子後再決定，大概在一天內就必須以有限的資訊對仲介提出 Offer。\n感覺主因是倫敦比台北大得多所以房源分佈更為分散，或是台灣太多屋主改建分租套房來撈錢，不想養車的話就只能貼著大眾運輸工具來找，比如公車站密集處、地鐵站、輕軌站等，導致整個更長的交通沿線上更大量的人爭奪有限的房源。\n再進一步考慮犯罪率與生活機能的話就更受限了，有的地鐵站只有東側有餐廳超市，西側則是大量工地或樹林住起來可能有點難受，這些問題對剛來倫敦的我們來說有時都是要實際到現場才知道，對大費周章通勤赴約的人不免蒙上一層失望感。\n更別提實際屋況有所落差、仲介放鴿子或臨時延後預約時間、看房之前被其他人截胡等等意外情況了，這些都對找房過程增添大量不確定性。\n我希望這篇文章能被作為工具文使用，為目前初來乍到的英國打工度假夥伴，或是有計劃在未來前往倫敦工作的朋友提供些幫助。內容會盡量給出具體數字，並且以我有限的文學造詣把實際情況描繪得生動一些。\n個人租屋經驗 抵達倫敦前我先訂了一個月的 Airbnb 作緩衝，很幸運的附近機能相當不錯，最初想以 7 折左右的預算尋找長租住處，沒想到上租屋網站刷了一下已經剩 10 間左右。\n若是再以長期可接受的步行距離（我個人住台北時的習慣大概是 0.5 mile，約 800 公尺）做篩選後，大概就只剩 5 間了。\n我當時主要使用 rightmove 找房，因為想和其他台灣室友一起合租，spareroom 這種組野團的網站不適合，但上面貌似有機會找到租金較低、租賃條件相對彈性一點的物件。\n許多前輩提到看到喜歡的房子直接打電話約時間我蠻同意的，但我仍會用網站幫我自動填入基本資訊和管理進度，畢竟發個 enquiry 花不了十秒鐘，打電話要動嘴講很久還要動手記下來有時容易亂掉。\n我在寫文章當下居住的 Airbnb 是間老房子，有些我事先不知道的問題讓我不太喜歡，比如二樓房間天花板是斜的、樓梯太窄 29 吋行李箱橫著搬會卡住、以及太舊的木門關不緊等等。\n然而在我看過更多更慘的老房子後，現在短租的這間 Airbnb 已經算是硬體齊全且維護的很好的了。\n儘管如此，傳統的老房子依然成了我看房時的 red flag。我蠻建議列出自己在意的條件再找房子時逐一確認，一方面留下結構化的資訊方便日後比較或和室友溝通，另一方面也是避免遺漏什麼關鍵需求。\n以下是我個人的清單供參考：\nmust have 距離地鐵或輕軌站近，距離如同前文所述，除非有腳踏車或電動滑板車而且有防偷手段，否則 1 mile 以上每天來回走實在有點折磨。 附傢俱，全部自己買的話搬家很麻煩，基本的床、衣櫃、餐桌和椅子都要有。 有垃圾代收或集中區，Airbnb 的房東再三強調垃圾要分類否則可能被拒收或罰錢。 要有陽台或曬衣區，雖然這邊貌似大多不曬衣服但我還是想曬一下。 不要和房東同住，因為有很多事情是房東覺得沒問題但租客覺得很嚴重的，比如房東突然收了另個新租客，他覺得很合理因為這是他的房子，但你可能就會在完全沒有被事先知會的情況下多個新室友住隔壁間。 不要太舊的舊房子，這比較根據個人主觀感受，但我主要從外牆剝落情況、木門及門框窗框邊緣磨損歪斜程度、陽台鐵欄杆生鏽等等情況評估，住進舊房子有更高機率碰上漏水或是內裝毀損等問題。 nice to have 電梯，在台北找房時這是 must have，但倫敦許多房子樓層都不高，家當不多找朋友一起扛個兩三層樓應該還好更高的話就會很累，幸好比較新的公寓電梯都是標配。 附近不要太多長期施工地，之前在台灣遇過工人長期在住處巷子口群聚喝酒抽煙，甚至囤積垃圾和放置流動廁所，導致整個衛生環境很糟，可能是個刻板印象但我現在對住處附近的工地很反感。 不要排屋，特別是社會住宅那種，我去看過一間，光是站建築物外面就能聽到裡面的人講話，公共走廊上也能透過窗戶直接看到房內，烹飪的味道也是迅速瀰漫整層樓。 走路 5 mins 內有超市和亞洲餐廳，比如天天超市。 電子門禁，Airbnb 住處的物理鎖常常需要把門喬到一個精確的角度才鎖得上，要是壞了需要守家就真的很麻煩。 最後看到了一間符合所有條件內裝格局也很滿意的，雖然略為的爆了 10% 的預算，但新工作下週就要上工，看房過程也被坑了幾次覺得是時候該止損了，於是馬上聯絡室友確認下訂。\n說到這個搶房過程也是十分刺激，當天仲介帶我看完房後馬上又當我的面帶了另一組客人上去，看他手裡的鑰匙串數量以及電梯停留的樓層，我很確定他沒有在唬爛我這房子很搶手，至少這個房仲沒有。\n於是我馬上打電話給未來的室友確認下訂，並在仲介的網站上填妥資料送出，同時站在房子門口等仲介下來堵他，當面說我送出 offer 了請他聯繫房東，成功阻止了下午看房的所有預約。\n等待一小時後便收到了房東的同意回覆，搶在其他已經看過房的潛在住客之前捷足先登。後續和房仲打聽了一下其他兩組潛在租客的預算都比我們高，還好手速夠快沒有被拖入競價的地獄之中，畢竟這會讓租客處於極端劣勢，算是不幸中的大幸。\n現在回顧整段歷程，先拿到一份全職工作的 Offer 可以提升不少競爭力，我猜這也是看房完後許多房仲仍不斷發簡訊提供我其他房子出租資訊的原因，同時也能幫忙 cover 還是學生或是尚未有全職工作的夥伴，更容易找到生活習慣合的來的室友。\n在與房東取得共識後蠻多仲介公司會進行 reference check，right-to-rent shared code 和 NI number 都能先準備好。\n我遇上的情況比找工作時還要繁瑣，除了工作合約外甚至還需要當時 Airbnb 租屋處的屋主電話，為此我得特別和她打聲招呼麻煩他留意簡訊。\n一切談妥後就會進行簽約交屋，合約部分不管在台北或倫敦都一樣務必看清楚或找有經驗的朋友幫忙。\n這次的仲介公司有提供免費的入住服務，可以幫我們運走所有不要的雜物，做第一次的全屋清潔，並且協助設定門禁、水電表及網路等等蠻方便的。\n和台北不太一樣的文化或規則 接著提幾個可能會導致你措手不及的點，可以先做些心理建設或準備資料。\n首先最困擾我的是倫敦的仲介覺得改時間不是什麼大不了的事，甚至是當天約定時間前三小時臨時改的，如果沒注意到電話或訊息已經搭上地鐵或火車就只好吞掉交通費了。\n相對於台北租房很多屋主都是有錢有閒的半退休阿伯阿桑親自帶看，喜歡的話可以當面直接成交，倫敦這邊大多是仲介居中協調，有一定的溝通時間成本和資訊落差。\n比如屋主已經成交了卻還沒告知仲介，結果我們還白費力氣跑去看，或是和你聯繫的房仲在忙還沒看你的訊息，結果被另一組仲介與租客搶得先機等等。\n順帶一提有些仲介週末會休假，盡量在上工前敲定住處免得需要時常請假看房。\n此外租屋市場對租客的要求挺嚴格的，光是在預約時就會確認稅前年收是否到達月租金的 30 倍，否則就需要預付 6 個月租金，還有些房子是只能租給家庭而不允許朋友同住的。反觀台灣的租屋市場雖是地下經濟，但花時間找還是有好講話的房東的。\n內裝格局的部分，這邊房子的公共空間佔比相對高得多，以兩房一衛 (2B1B) 來說大部分公共空間像是客廳、陽台、廚房加總都佔一半以上，如果像台灣合租時單純以房間坪數分房租可能不太公平。\n外推陽台在這邊非常常見，但是在台灣通常是違建，走在路上時常看到公寓牆面一格格馬賽克狀的外推陽台。有些底部是木材搭建的不確定承重多少，如果想把洗衣烘衣機等家電放陽台的可能要問一下最大承重以及漏水問題。\n大部分公寓不同住戶間是磚牆，但同一住戶不同房間之間都是木牆，所以貼著客廳的房間要注意一下隔音問題。\n貌似英國人認為房子內不應該有磚牆，主要是讓暖氣有效傳導，以及他們常常重新設計裝潢房子內部，木頭牆拆除時比較不傷地板和天花板。\n交通與生活機能上，因為英國的路很多是弧線或是圓圈而不像台灣大多是網格狀，也有像球場或河流這種不能直接穿越的區域，租房網站上顯示和車站的直線距離參考價值有限，建議實際走一次來計算比較準。\n某些區域是很純粹的住宅區，飛機降落時看到那種一排排很整齊的傳統英式房屋通常就是，走路 10 分鐘都不一定能看到幾間商店的。\n這種房子通常是有車的家庭在住，每週去大賣場一兩次把生活用品補齊，獨活的上班族著這種地方會超不方便。\n有些屋主不同意打額外的備用鑰匙，不確定這邊的鎖匠需不需要出示什麼證明才能打，但是在台北很多人都會自己去偷打。\n沒有備用鑰匙的話，弄丟了就只能寄託希望於室友，或是找有 24 hrs concierge 的公寓，站在門外等管理員注意到你過來幫忙開門。\n值得慶幸的是目前我接觸到的房源租金都已經包含了除了水電網路帳單以外的所有費用，用高一些的預算找公寓型的住處算是蠻合理且划算的。\n不像台灣房東時常壓低租金來提升找房網站的 SEO，實際看房時卻多出管理費、分攤公設電費等等名目，把最終固定租金抬了 10% ~ 15%。\n搶房子時的無力感 稍微聊聊我印象特別深的衝擊，原來身處異鄉自己搞定居住問題是這種感覺。\n最經典的莫過於刺激的搶房遊戲，原本以為只有買房時才會動用整個家庭的資源來玩，但是在我某次前去金絲雀碼頭看房時，被仲介告知上一組留學生租客直接加價 350 pcm 下訂時讓我有點驚訝。\n一方面是懷疑租屋市場是否真的已經內捲到有人願意主動加價替房東抬轎，另一方面是對國際大城市留學生的財力歎為觀止。\n雖然不否認他們可能與我年齡相仿就有更厚實的多的經濟能力，但內心有種連租房都是整個家庭之間競爭的感覺，獨自旅外的工作者顯然勢單力薄。\n儘管作為經濟上頗有餘裕的科技業社畜，面對一出手就直接加價的競爭者我還是感到力不從心，一個畢業沒幾年的基層上班族想拿下沒有嚴重缺點的房子還是挺難的。\n只能在找到 CP 值夠高的物件後快速下訂永絕後患，祈禱別遇上多個租客都給出 offer 淪落到被拿來競價的下場。\n原本還天真地以為可以透過挑房子毛病以及其他看房預約來議價，後來發現話語權根本不在租客，多猶豫半天或是想壓低出價只能看著房東和其他人成交。\n最後只好把握每次看房機會和仲介深入聊一些，多掌握些市場資訊為下次找房做準備，蠻意外的是大部分仲介對於租客看房後的心得很有興趣也很樂於接受建議，出於好奇我接受了幾位仲介在未來有合適房源時可以直接發訊息給我的提議。\n其次就是被臨時改時間的情況挺棘手的，畢竟倫敦比台北大不少所以通勤時間成倍增加，有時規劃好了今天去某區連續看兩三間房，其中一位仲介卻臨時要改明天，額外的交通費加上花心思重新規劃行程也是不小的消耗。\n屋況有落差的無奈感也被通勤成本放大了不少，硬體設備壞掉或是還沒補上的我一律視為和網站上不一致，畢竟先付訂金時還看不到最終合約內容，後續也不一定能確定能拿到滿意的設備。\n最扯的還有直接少一間廁所的，真的有種浪費時間白跑一趟的感覺。\n一些客觀數據 最後是一些數據，大部分是我事前不知道或是沒辦法控制的事情，畢竟如果是能選擇的資訊在看之前就能統計了。\n可能這些單調無趣的數字不是每個人都看得下去，但量化資料確實是我希望在制定找房策略時希望看到的，所以我還是在過程中持續記錄下來了：\n找房時間是 3 月中，在 7 天內一共有 15 間房子想看 3 間已經成交只是還未撤下，預約失敗 12 間最後有成功安排看房，5 間雙人公寓，7 間三人公寓 都是早上 9 點左右先網站預約 3 間網站預約後 5 分鐘內直接聯繫我約時間 9 間等了 1 小時沒聯繫後，直接打電話去都有成功聯繫上 2 間同時被 2 個以上的仲介聯繫，不知道是不是搶生意 5 間接電話的只負責排時間，不是帶看的仲介 7 間在 Airbnb 住處附近的都要求當天看，5 間其他區的都嘗試約隔天 5 間當天早上約，中午或下午就能去看 6 間約到隔天看 1 間只約到大後天看無法提前，因為明後天預約已經排滿 3 間被在約看房當天改時間 5 間實際看房時和網路上所寫的描述不一致 1 間有重大落差，少 1 間廁所 2 間 floor plan 和網站上的不同，主要是房間長寬比和格局安排 2 間實際地址和網站上的地圖標記有 3 ~ 5 分鐘步行距離的差別 1 間公設硬體有不一致，洗碗機壞掉而且沒有床 9 間仲介主動告知有其他考慮中的潛在租客 3 間在現場看到前一組或下一組客人 1 間見面時被告知上一組客人加價 350 pcm 下訂了，我靠 7 間仲介在 2 天內聯繫詢問想法，推測是仲介比較中意我們這組租客 12 間都不要求找專業清潔人員，可以自己清 12 間仲介都願意分享鄰居和前任租客的粗略資訊，比如國籍和職業 12 間仲介都願提提供市政稅和水電費的粗估數字 9 間有垃圾代收或集中區，網站都沒寫所以現場問仲介才知道 大概先寫到這邊，其他有想到再補，祝各位找房順利。\n","description":"","tags":null,"title":"英國倫敦租屋經驗分享","uri":"/posts/looking_for_house_to_rent_in_london/"}]
